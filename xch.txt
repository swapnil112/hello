from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.datasets import fetch_20newsgroups

# Load example dataset
newsgroups = fetch_20newsgroups(subset='train')
data = newsgroups.data

# Create TfidfVectorizer
vectorizer = TfidfVectorizer(stop_words='english')

# Vectorize data and compute tf-idf scores
X = vectorizer.fit_transform(data)

# Get feature names
feature_names = vectorizer.get_feature_names()

# Inverse transform tf-idf scores to get document-term matrix
doc_term_matrix = vectorizer.inverse_transform(X)

# Get top feature names for each document based on tf-idf scores
top_feature_names = [doc_term_matrix[i].tolist() for i in range(len(data))]
top_feature_names = [[feature_names[index] for index in tfidf_scores.argsort()[::-1][:5]] for tfidf_scores in X.toarray()]

# Print top feature names for first 5 documents
for i in range(5):
    print(f"Top features for document {i}: {top_feature_names[i]}")
