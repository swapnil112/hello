import pandas as pd

# Create the original dataframe with string columns
df = pd.DataFrame({'col': [ {('a',1),('b',0),('c',1)}, {('d',0),('a',1)} ]})

# Create a new dataframe with columns as the unique column names
new_df = pd.DataFrame(columns=sorted(set([pair[0] for row in df['col'] for pair in row])))

# Fill the new dataframe with values
rows = []
for i, row in df.iterrows():
    new_row = {}
    for pair in row['col']:
        new_row[pair[0]] = pair[1]
    rows.append(new_row)
new_df = pd.concat([new_df, pd.DataFrame(rows)], ignore_index=True)

# Replace NaN values with '-' in the new dataframe
new_df = new_df.fillna('-').astype(str)

# Print the new dataframe
print(new_df)


import pandas as pd
import ast

# create example dataframe
df = pd.DataFrame({'set_col': ['{(1,0),(2,1)}', '{(3,2),(4,3),(5,2)}']})

# apply ast.literal_eval to each row of set_col
df['set_col'] = df['set_col'].apply(ast.literal_eval)

print(df)
